import { combineReducers } from 'redux';
import undoable, { includeAction } from 'redux-undo';
import layer from './layer';
import tool from './tool';
import contextMenu from './contextMenu';
import tweenDrawer from './tweenDrawer';
import easeEditor from './easeEditor';
import colorEditor from './colorEditor';
import gradientEditor from './gradientEditor';
import artboardPresetEditor from './artboardPresetEditor';
import textEditor from './textEditor';
import textSettings from './textSettings';
import canvasSettings from './canvasSettings';
import documentSettings from './documentSettings';
import rightSidebar from './rightSidebar';
import theme from './theme';
import { importPaperProject } from '../selectors/layer';
import { paperMain } from '../../canvas';

import {
  ADD_ARTBOARD,
  ADD_GROUP,
  ADD_SHAPE,
  ADD_TEXT,
  ADD_IMAGE,
  REMOVE_LAYER,
  REMOVE_LAYERS,
  ADD_LAYER_CHILD,
  ADD_LAYER_CHILDREN,
  INSERT_LAYER_CHILD,
  INSERT_LAYER_ABOVE,
  INSERT_LAYERS_ABOVE,
  INSERT_LAYER_BELOW,
  INSERT_LAYERS_BELOW,
  GROUP_LAYERS,
  UNGROUP_LAYER,
  UNGROUP_LAYERS,
  COPY_LAYER_TO_CLIPBOARD,
  COPY_LAYERS_TO_CLIPBOARD,
  PASTE_LAYERS_FROM_CLIPBOARD,
  MOVE_LAYER_TO,
  MOVE_LAYER_BY,
  MOVE_LAYERS_TO,
  MOVE_LAYERS_BY,
  SET_LAYER_NAME,
  ADD_LAYER_TWEEN_EVENT,
  REMOVE_LAYER_TWEEN_EVENT,
  ADD_LAYER_TWEEN,
  REMOVE_LAYER_TWEEN,
  SET_LAYER_TWEEN_DURATION,
  SET_LAYER_TWEEN_DELAY,
  SET_LAYER_TWEEN_TIMING,
  SET_LAYER_TWEEN_EASE,
  SET_LAYER_TWEEN_POWER,
  SET_LAYER_X,
  SET_LAYERS_X,
  SET_LAYER_Y,
  SET_LAYERS_Y,
  SET_LAYER_WIDTH,
  SET_LAYERS_WIDTH,
  SET_LAYER_HEIGHT,
  SET_LAYERS_HEIGHT,
  SET_LAYER_ROTATION,
  SET_LAYERS_ROTATION,
  SET_LAYER_OPACITY,
  SET_LAYERS_OPACITY,
  ENABLE_LAYER_HORIZONTAL_FLIP,
  DISABLE_LAYER_HORIZONTAL_FLIP,
  ENABLE_LAYER_VERTICAL_FLIP,
  DISABLE_LAYER_VERTICAL_FLIP,
  ENABLE_LAYER_FILL,
  ENABLE_LAYERS_FILL,
  DISABLE_LAYER_FILL,
  DISABLE_LAYERS_FILL,
  SET_LAYER_FILL,
  SET_LAYER_FILL_COLOR,
  SET_LAYERS_FILL_COLOR,
  SET_LAYER_FILL_TYPE,
  ENABLE_LAYER_STROKE,
  ENABLE_LAYERS_STROKE,
  DISABLE_LAYER_STROKE,
  DISABLE_LAYERS_STROKE,
  SET_LAYER_STROKE_COLOR,
  SET_LAYERS_STROKE_COLOR,
  SET_LAYER_STROKE_FILL_TYPE,
  SET_LAYERS_STROKE_FILL_TYPE,
  SET_LAYER_GRADIENT,
  SET_LAYERS_GRADIENT,
  SET_LAYER_GRADIENT_TYPE,
  SET_LAYERS_GRADIENT_TYPE,
  ADD_LAYER_GRADIENT_STOP,
  ADD_LAYERS_GRADIENT_STOP,
  SET_LAYER_GRADIENT_STOP_POSITION,
  SET_LAYERS_GRADIENT_STOP_POSITION,
  SET_LAYER_GRADIENT_STOP_COLOR,
  SET_LAYERS_GRADIENT_STOP_COLOR,
  REMOVE_LAYER_GRADIENT_STOP,
  REMOVE_LAYERS_GRADIENT_STOP,
  SET_LAYER_GRADIENT_DESTINATION,
  SET_LAYERS_GRADIENT_DESTINATION,
  SET_LAYER_GRADIENT_ORIGIN,
  SET_LAYERS_GRADIENT_ORIGIN,
  SET_LAYER_STROKE_WIDTH,
  SET_LAYERS_STROKE_WIDTH,
  SET_LAYER_STROKE_CAP,
  SET_LAYERS_STROKE_CAP,
  SET_LAYER_STROKE_JOIN,
  SET_LAYERS_STROKE_JOIN,
  SET_LAYER_STROKE_DASH_OFFSET,
  SET_LAYERS_STROKE_DASH_OFFSET,
  SET_LAYER_STROKE_DASH_ARRAY,
  SET_LAYERS_STROKE_DASH_ARRAY,
  ENABLE_LAYER_SHADOW,
  ENABLE_LAYERS_SHADOW,
  DISABLE_LAYER_SHADOW,
  DISABLE_LAYERS_SHADOW,
  SET_LAYER_SHADOW_COLOR,
  SET_LAYERS_SHADOW_COLOR,
  SET_LAYER_SHADOW_BLUR,
  SET_LAYERS_SHADOW_BLUR,
  SET_LAYER_SHADOW_X_OFFSET,
  SET_LAYERS_SHADOW_X_OFFSET,
  SET_LAYER_SHADOW_Y_OFFSET,
  SET_LAYERS_SHADOW_Y_OFFSET,
  SCALE_LAYER,
  SCALE_LAYERS,
  SET_LAYER_TEXT,
  SET_LAYER_FONT_SIZE,
  SET_LAYERS_FONT_SIZE,
  SET_LAYER_LEADING,
  SET_LAYERS_LEADING,
  SET_LAYER_FONT_WEIGHT,
  SET_LAYERS_FONT_WEIGHT,
  SET_LAYER_FONT_FAMILY,
  SET_LAYERS_FONT_FAMILY,
  SET_LAYER_JUSTIFICATION,
  SET_LAYERS_JUSTIFICATION,
  ADD_LAYERS_MASK,
  ALIGN_LAYERS_TO_LEFT,
  ALIGN_LAYERS_TO_RIGHT,
  ALIGN_LAYERS_TO_TOP,
  ALIGN_LAYERS_TO_BOTTOM,
  ALIGN_LAYERS_TO_CENTER,
  ALIGN_LAYERS_TO_MIDDLE,
  DISTRIBUTE_LAYERS_HORIZONTALLY,
  DISTRIBUTE_LAYERS_VERTICALLY,
  SET_LAYER_BLEND_MODE,
  SET_LAYERS_BLEND_MODE,
  UNITE_LAYERS,
  INTERSECT_LAYERS,
  SUBTRACT_LAYERS,
  EXCLUDE_LAYERS,
  DIVIDE_LAYERS,
  SET_ROUNDED_RADIUS,
  SET_STAR_POINTS,
  SET_POLYGON_SIDES,
  SET_STAR_RADIUS,
  SET_CURVE_POINT_ORIGIN,
  SET_CURVE_POINT_ORIGIN_X,
  SET_CURVE_POINT_ORIGIN_Y
} from '../actionTypes/layer';

const appReducer = combineReducers({
  layer: undoable(layer, { filter: includeAction([
    ADD_ARTBOARD,
    ADD_GROUP,
    ADD_SHAPE,
    ADD_TEXT,
    ADD_IMAGE,
    REMOVE_LAYER,
    REMOVE_LAYERS,
    ADD_LAYER_CHILD,
    ADD_LAYER_CHILDREN,
    INSERT_LAYER_CHILD,
    INSERT_LAYER_ABOVE,
    INSERT_LAYERS_ABOVE,
    INSERT_LAYER_BELOW,
    INSERT_LAYERS_BELOW,
    GROUP_LAYERS,
    UNGROUP_LAYER,
    UNGROUP_LAYERS,
    COPY_LAYER_TO_CLIPBOARD,
    COPY_LAYERS_TO_CLIPBOARD,
    PASTE_LAYERS_FROM_CLIPBOARD,
    MOVE_LAYER_TO,
    MOVE_LAYER_BY,
    MOVE_LAYERS_TO,
    MOVE_LAYERS_BY,
    SET_LAYER_NAME,
    ADD_LAYER_TWEEN_EVENT,
    REMOVE_LAYER_TWEEN_EVENT,
    ADD_LAYER_TWEEN,
    REMOVE_LAYER_TWEEN,
    SET_LAYER_TWEEN_DURATION,
    SET_LAYER_TWEEN_DELAY,
    SET_LAYER_TWEEN_TIMING,
    SET_LAYER_TWEEN_EASE,
    SET_LAYER_TWEEN_POWER,
    SET_LAYER_X,
    SET_LAYERS_X,
    SET_LAYER_Y,
    SET_LAYERS_Y,
    SET_LAYER_WIDTH,
    SET_LAYERS_WIDTH,
    SET_LAYER_HEIGHT,
    SET_LAYERS_HEIGHT,
    SET_LAYER_ROTATION,
    SET_LAYERS_ROTATION,
    SET_LAYER_OPACITY,
    SET_LAYERS_OPACITY,
    ENABLE_LAYER_HORIZONTAL_FLIP,
    DISABLE_LAYER_HORIZONTAL_FLIP,
    ENABLE_LAYER_VERTICAL_FLIP,
    DISABLE_LAYER_VERTICAL_FLIP,
    ENABLE_LAYER_FILL,
    ENABLE_LAYERS_FILL,
    DISABLE_LAYER_FILL,
    DISABLE_LAYERS_FILL,
    SET_LAYER_FILL,
    SET_LAYER_FILL_COLOR,
    SET_LAYERS_FILL_COLOR,
    SET_LAYER_FILL_TYPE,
    ENABLE_LAYER_STROKE,
    ENABLE_LAYERS_STROKE,
    DISABLE_LAYER_STROKE,
    DISABLE_LAYERS_STROKE,
    SET_LAYER_STROKE_COLOR,
    SET_LAYERS_STROKE_COLOR,
    SET_LAYER_STROKE_FILL_TYPE,
    SET_LAYERS_STROKE_FILL_TYPE,
    SET_LAYER_GRADIENT,
    SET_LAYERS_GRADIENT,
    SET_LAYER_GRADIENT_TYPE,
    SET_LAYERS_GRADIENT_TYPE,
    ADD_LAYER_GRADIENT_STOP,
    ADD_LAYERS_GRADIENT_STOP,
    SET_LAYER_GRADIENT_STOP_POSITION,
    SET_LAYERS_GRADIENT_STOP_POSITION,
    SET_LAYER_GRADIENT_STOP_COLOR,
    SET_LAYERS_GRADIENT_STOP_COLOR,
    REMOVE_LAYER_GRADIENT_STOP,
    REMOVE_LAYERS_GRADIENT_STOP,
    SET_LAYER_GRADIENT_DESTINATION,
    SET_LAYERS_GRADIENT_DESTINATION,
    SET_LAYER_GRADIENT_ORIGIN,
    SET_LAYERS_GRADIENT_ORIGIN,
    SET_LAYER_STROKE_WIDTH,
    SET_LAYERS_STROKE_WIDTH,
    SET_LAYER_STROKE_CAP,
    SET_LAYERS_STROKE_CAP,
    SET_LAYER_STROKE_JOIN,
    SET_LAYERS_STROKE_JOIN,
    SET_LAYER_STROKE_DASH_OFFSET,
    SET_LAYERS_STROKE_DASH_OFFSET,
    SET_LAYER_STROKE_DASH_ARRAY,
    SET_LAYERS_STROKE_DASH_ARRAY,
    ENABLE_LAYER_SHADOW,
    ENABLE_LAYERS_SHADOW,
    DISABLE_LAYER_SHADOW,
    DISABLE_LAYERS_SHADOW,
    SET_LAYER_SHADOW_COLOR,
    SET_LAYERS_SHADOW_COLOR,
    SET_LAYER_SHADOW_BLUR,
    SET_LAYERS_SHADOW_BLUR,
    SET_LAYER_SHADOW_X_OFFSET,
    SET_LAYERS_SHADOW_X_OFFSET,
    SET_LAYER_SHADOW_Y_OFFSET,
    SET_LAYERS_SHADOW_Y_OFFSET,
    SCALE_LAYER,
    SCALE_LAYERS,
    SET_LAYER_TEXT,
    SET_LAYER_FONT_SIZE,
    SET_LAYERS_FONT_SIZE,
    SET_LAYER_LEADING,
    SET_LAYERS_LEADING,
    SET_LAYER_FONT_WEIGHT,
    SET_LAYERS_FONT_WEIGHT,
    SET_LAYER_FONT_FAMILY,
    SET_LAYERS_FONT_FAMILY,
    SET_LAYER_JUSTIFICATION,
    SET_LAYERS_JUSTIFICATION,
    ADD_LAYERS_MASK,
    ALIGN_LAYERS_TO_LEFT,
    ALIGN_LAYERS_TO_RIGHT,
    ALIGN_LAYERS_TO_TOP,
    ALIGN_LAYERS_TO_BOTTOM,
    ALIGN_LAYERS_TO_CENTER,
    ALIGN_LAYERS_TO_MIDDLE,
    DISTRIBUTE_LAYERS_HORIZONTALLY,
    DISTRIBUTE_LAYERS_VERTICALLY,
    SET_LAYER_BLEND_MODE,
    SET_LAYERS_BLEND_MODE,
    UNITE_LAYERS,
    INTERSECT_LAYERS,
    SUBTRACT_LAYERS,
    EXCLUDE_LAYERS,
    DIVIDE_LAYERS,
    SET_ROUNDED_RADIUS,
    SET_STAR_POINTS,
    SET_POLYGON_SIDES,
    SET_STAR_RADIUS,
    SET_CURVE_POINT_ORIGIN,
    SET_CURVE_POINT_ORIGIN_X,
    SET_CURVE_POINT_ORIGIN_Y
  ])}),
  documentSettings,
  canvasSettings,
  tool,
  contextMenu,
  tweenDrawer,
  easeEditor,
  textEditor,
  textSettings,
  colorEditor,
  gradientEditor,
  artboardPresetEditor,
  rightSidebar,
  theme
});

const OPEN_FILE = 'OPEN_FILE';

interface OpenFilePayload {
  file: string;
}

interface OpenFile {
  type: typeof OPEN_FILE;
  payload: OpenFilePayload;
}

type fileTypes = OpenFile;

export const openFile = (payload: OpenFilePayload): fileTypes => ({
  type: OPEN_FILE,
  payload
});

const rootReducer = (state: any, action: fileTypes) => {
  if (action.type === 'OPEN_FILE') {
    state = action.payload.file;
    const canvas = document.getElementById('canvas-container') as HTMLCanvasElement;
    importPaperProject({
      paperProject: state.layer.present.paperProject,
      canvasImages: state.canvasSettings.images.byId,
      layers: {
        shape: state.layer.present.allShapeIds,
        artboard: state.layer.present.allArtboardIds,
        text: state.layer.present.allTextIds,
        image: state.layer.present.allImageIds
      }
    });
    paperMain.view.viewSize = new paperMain.Size(canvas.clientWidth, canvas.clientHeight);
    paperMain.view.matrix.set(state.canvasSettings.matrix);
  }
  return appReducer(state, action);
}

export type RootState = ReturnType<typeof rootReducer>;

export default rootReducer;